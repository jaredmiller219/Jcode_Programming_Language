{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "JCode Programming Language",
  "scopeName": "source.jcode",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#functions"
    },
    {
      "include": "#types"
    },
    {
      "include": "#variables"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#operators"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.number-sign.jcode",
          "match": "#.*$"
        },
        {
          "name": "comment.line.double-slash.jcode",
          "match": "//.*$"
        },
        {
          "name": "comment.block.jcode",
          "begin": "/\\*",
          "end": "\\*/"
        },
        {
          "name": "comment.line.documentation.jcode",
          "match": "///.*$"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.jcode",
          "match": "\\b(if|elif|else|for|while|then|end|return|continue|break|to|step|and|or|not)\\b"
        }
      ]
    },
    "strings": {
      "name": "string.quoted.double.jcode",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.jcode",
          "match": "\\\\."
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "name": "entity.name.function.jcode",
          "match": "\\b(func)\\s+([a-zA-Z_][a-zA-Z0-9_]*)"
        },
        {
          "name": "support.function.jcode",
          "match": "\\b(print|len|append)\\b"
        }
      ]
    },
    "types": {
      "patterns": [
        {
          "name": "storage.type.jcode",
          "match": "\\b(int|float|string|list|function|var|func)\\b"
        }
      ]
    },
    "variables": {
      "patterns": [
        {
          "name": "variable.parameter.jcode",
          "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*:"
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.jcode",
          "match": "\\b\\d+(\\.\\d+)?\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.jcode",
          "match": "(\\+|\\-|\\*|\\/|=|==|!=|<|>|<=|>=)"
        }
      ]
    }
  }
}
